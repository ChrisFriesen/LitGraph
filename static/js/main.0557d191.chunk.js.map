{"version":3,"sources":["index.js"],"names":["require","Highcharts","options","chart","type","height","title","text","plotOptions","networkgraph","keys","layoutAlgorithm","enableSimulation","friction","lang","noData","style","fontWeight","fontSize","color","series","dataLabels","enabled","linkFormat","id","data","LiteratureGraphing","props","state","chartOptions","bibliography","citingPaper","hasQuotes","handleChange","bind","handleSubmit","parseBibliography","e","name","target","value","checked","this","setState","preventDefault","length","papers","parseBibliographyQuotes","cleanPaperNames","i","newRelation","toLowerCase","push","prevState","splitBiblio","split","end","indexOf","paper","slice","prePeriod","start","j","match","replace","LitGraph","onSubmit","htmlFor","onChange","rows","cols","React","Component","highcharts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0557d191.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport './index.css';\n\nrequire('highcharts/modules/networkgraph')(Highcharts);\nrequire('highcharts/modules/no-data-to-display')(Highcharts);\nrequire('highcharts/modules/annotations')(Highcharts);\n\n\n// General options for the litGraph\nvar options = {\n  chart: {\n    type: 'networkgraph',\n    height: '100%'\n  },\n  title: {\n    text: 'Literature Citation Graph'\n  },\n  plotOptions: {\n      networkgraph: {\n          keys: ['from', 'to'],\n          layoutAlgorithm: {\n              enableSimulation: true,\n              friction: -0.9\n          }\n      }\n  },\n  lang: {\n      noData: \"No data to display, use the form below\"\n  },\n  noData: {\n      style: {\n          fontWeight: 'bold',\n          fontSize: '15px',\n          color: '#303030'\n      }\n  },\n  series: [{\n        dataLabels: {\n            enabled: false,\n            linkFormat: ''\n        },\n        id: 'litGraph',\n        data: [],\n  }],\n}\n\n\nclass LiteratureGraphing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartOptions: options,\n      bibliography: '',\n      citingPaper: '',\n      hasQuotes: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.parseBibliography = this.parseBibliography.bind(this);\n  }\n\n  handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    \n    this.setState({ \n      [name]: value \n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (!this.state.bibliography.length) {\n      return;\n    }\n\n    var papers;\n    var data = this.state.chartOptions.series[0].data;\n\n    if (this.state.hasQuotes) {\n      papers = this.parseBibliographyQuotes();\n    } else {\n      papers = this.parseBibliography();\n    }\n\n    this.cleanPaperNames(papers);\n\n    for (var i = 0; i < papers.length; i++) {\n      var newRelation = [this.state.citingPaper.toLowerCase(), papers[i]];\n      data.push(newRelation);\n    }\n\n    this.setState(prevState => ({\n      chartOptions: {\n        series: [{\n          dataLabels: {\n              enabled: false,\n              linkFormat: ''\n          },\n          id: 'litGraph',\n          data: data\n        }]\n      }\n    }));\n  }\n\n  parseBibliographyQuotes() {\n    var papers = [];\n    var splitBiblio = this.state.bibliography.split(\"\\“\");\n\n    /* i begins at 1 as the first title will be at array[1] since\n     * we're spliting on \"\n     */\n    for (var i = 1; i < splitBiblio.length; i++) {\n      var end = splitBiblio[i].indexOf(\"”\");\n      var paper = splitBiblio[i].slice(0, end);\n      papers.push(paper.slice(0, paper.length - 1));\n    }\n\n    return papers;\n  }\n\n  parseBibliography() {\n    var papers = [];\n    var splitBiblio = this.state.bibliography.split(\"]\");\n\n    /* i begins at 1 as the first title will be at array[1] since\n     * we're spliting on ]\n     */\n    for (var i = 1; i < splitBiblio.length; i++) {\n      var prePeriod = 0;\n      var start = null;\n\n      for (var j = 0; j < splitBiblio[i].length; j++) {\n\n        if (splitBiblio[i][j] === '.') {\n          if (prePeriod > 1 && start === null) {\n            start = j + 2;\n          } else if (prePeriod > 1) {\n            papers.push(splitBiblio[i].slice(start, j));\n            break;\n          }\n\n          prePeriod = 0;\n        }\n\n        if (splitBiblio[i][j].match(/\\s/)) {\n          prePeriod = 0;\n        } else if (splitBiblio[i][j].match(/^[a-zA-Z]*$/)) {\n          prePeriod++;\n        }\n      }\n    }\n\n    return papers;\n  }\n\n  cleanPaperNames(papers) {\n    for (var i = 0; i < papers.length; i++) {\n      papers[i] = papers[i].replace(/\\n/g, \" \").toLowerCase();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <LitGraph \n          value={this.state.chartOptions}\n        />\n        <form id='data-form' onSubmit={this.handleSubmit}>\n          <label htmlFor='citing-paper'>\n            Enter the paper name:\n            <br />\n            <input\n              id='citing-paper'\n              name='citingPaper'\n              type='text'\n              onChange={this.handleChange}\n              value={this.state.citingPaper}\n          />\n          </label>\n          <br />\n          <label htmlFor='bibliography'>\n            Paste an IEEE formatted bibliography here:\n            <br />\n            <textarea\n              id='bibliography'\n              name='bibliography'\n              rows='20'\n              cols='60'\n              onChange={this.handleChange}\n              value={this.state.bibliography}\n            />\n          </label>\n          <br />\n          <label htmlFor='has-quotes'>\n            Has quotes around paper titles\n            <input\n              id='has-quotes'\n              name='hasQuotes'\n              type='checkbox'\n              checked={this.state.hasQuotes}\n              onChange={this.handleChange} />\n          </label>\n          <br />\n          <br />\n          <button>\n            Add paper citations\n          </button>\n        </form>\n        <br />\n      </div>\n    );\n  }\n}\n\nclass LitGraph extends React.Component {\n\n  render() {\n    return (\n      <div id='litGraph-container'>\n        <HighchartsReact \n          highcharts={Highcharts}\n          options={this.props.value}\n        />\n      </div>\n    )\n  }\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <LiteratureGraphing />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}